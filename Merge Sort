#include<iostream>
using namespace std;
// divide then Sort
// this will sort & merge

void merge(int a[],int start,int mid,int end){
int start1 = start;
int end1 = mid;
int start2 = mid+1;
int end2 = end;
int k=0;
int temp[100];

 while(start1<=end1 && start2<=end2){
     if(a[start1] < a[start2]){
         temp[k++] = a[start1++];
     }else{
        temp[k++] = a[start2++];
     }
 }

 // start1 doesn't reach end1 ,other side is full then
  while(start1<=end1){
      temp[k++] = a[start1++];
  }
// other case 
  while(start2<=end2){
      temp[k++] = a[start2++];
  }

  for(int i=0;i<k;i++){
      a[start+i] = temp[i];
  }
}

//divide
void mergeSort(int a[],int start,int end){
 if(start>=end){
     return;
 }

int mid = (start+end)/2;
mergeSort(a,start,mid);
mergeSort(a,mid+1,end);
merge(a,start,mid,end);
return;
}

int main(){
int n;
cin>>n;
int a[100];
  for(int i=0;i<n;i++){
      cin>>a[i];
  }
 
  mergeSort(a,0,n-1);

  for(int i=0;i<n;i++){
    cout<<a[i]<<" ";
  }

}
